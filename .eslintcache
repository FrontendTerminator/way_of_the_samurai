[{"C:\\IT\\way_of_the_samurai\\my-app\\src\\App.tsx":"1","C:\\IT\\way_of_the_samurai\\my-app\\src\\reportWebVitals.ts":"2","C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Header\\header.tsx":"3","C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Profile\\Profile.tsx":"4","C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"5","C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"6","C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Dialogs\\Dialogs.tsx":"7","C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Navbar\\Navbar.tsx":"8","C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"9","C:\\IT\\way_of_the_samurai\\my-app\\src\\index.tsx":"10","C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx":"11","C:\\IT\\way_of_the_samurai\\my-app\\src\\redux\\Profile-reducer.tsx":"12","C:\\IT\\way_of_the_samurai\\my-app\\src\\redux\\redux-store.tsx":"13","C:\\IT\\way_of_the_samurai\\my-app\\src\\redux\\Sidebar-reducer.tsx":"14","C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"15","C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx":"16","C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Navbar\\NavbarContainer.tsx":"17","C:\\IT\\way_of_the_samurai\\my-app\\src\\StoreContext.tsx":"18","C:\\IT\\way_of_the_samurai\\my-app\\src\\redux\\Dialogs-reducer.tsx":"19","C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Users\\users.tsx":"20","C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Users\\UsersContainer.tsx":"21","C:\\IT\\way_of_the_samurai\\my-app\\src\\redux\\Users-reducer.tsx":"22","C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Profile\\ProfileContainer.tsx":"23","C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Common\\Preloader\\Preloader.tsx":"24","C:\\IT\\way_of_the_samurai\\my-app\\src\\redux\\Auth-reducer.tsx":"25","C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Header\\headerContainer.tsx":"26","C:\\IT\\way_of_the_samurai\\my-app\\src\\api\\api.ts":"27","C:\\IT\\way_of_the_samurai\\my-app\\src\\hoc\\withAuthRedirect.tsx":"28","C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Login\\Login.tsx":"29","C:\\IT\\way_of_the_samurai\\my-app\\src\\utils\\validators\\validators.ts":"30","C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Common\\FormsControls\\FormsControls.tsx":"31","C:\\IT\\way_of_the_samurai\\my-app\\src\\redux\\App-reducer.tsx":"32","C:\\IT\\way_of_the_samurai\\my-app\\src\\redux\\users-selectors.ts":"33","C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Users\\user.tsx":"34","C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Common\\Paginator\\Paginator.tsx":"35","C:\\IT\\way_of_the_samurai\\my-app\\src\\hoc\\withSuspense.tsx":"36","C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx":"37","C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"38","C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Common\\Button\\Button.tsx":"39","C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Chat\\ChatPage.tsx":"40"},{"size":3910,"mtime":1620134545473,"results":"41","hashOfConfig":"42"},{"size":425,"mtime":1607600916665,"results":"43","hashOfConfig":"42"},{"size":820,"mtime":1619875037705,"results":"44","hashOfConfig":"42"},{"size":1271,"mtime":1619877696187,"results":"45","hashOfConfig":"42"},{"size":1860,"mtime":1619871544770,"results":"46","hashOfConfig":"42"},{"size":652,"mtime":1620135512808,"results":"47","hashOfConfig":"42"},{"size":2177,"mtime":1619865718690,"results":"48","hashOfConfig":"42"},{"size":2469,"mtime":1620134593467,"results":"49","hashOfConfig":"42"},{"size":442,"mtime":1619865718536,"results":"50","hashOfConfig":"42"},{"size":746,"mtime":1618919190888,"results":"51","hashOfConfig":"42"},{"size":326,"mtime":1619865718631,"results":"52","hashOfConfig":"42"},{"size":4154,"mtime":1619872607359,"results":"53","hashOfConfig":"42"},{"size":1411,"mtime":1618578467566,"results":"54","hashOfConfig":"42"},{"size":412,"mtime":1611428281080,"results":"55","hashOfConfig":"42"},{"size":707,"mtime":1618837761634,"results":"56","hashOfConfig":"42"},{"size":909,"mtime":1618675900251,"results":"57","hashOfConfig":"42"},{"size":779,"mtime":1611830135517,"results":"58","hashOfConfig":"42"},{"size":516,"mtime":1611738600616,"results":"59","hashOfConfig":"42"},{"size":1502,"mtime":1615891559619,"results":"60","hashOfConfig":"42"},{"size":1458,"mtime":1619864922369,"results":"61","hashOfConfig":"42"},{"size":3603,"mtime":1619876240831,"results":"62","hashOfConfig":"42"},{"size":5004,"mtime":1619865563327,"results":"63","hashOfConfig":"42"},{"size":3317,"mtime":1619863358579,"results":"64","hashOfConfig":"42"},{"size":303,"mtime":1619800422790,"results":"65","hashOfConfig":"42"},{"size":4601,"mtime":1619864661023,"results":"66","hashOfConfig":"42"},{"size":680,"mtime":1616156032580,"results":"67","hashOfConfig":"42"},{"size":2891,"mtime":1619866627614,"results":"68","hashOfConfig":"42"},{"size":1153,"mtime":1615461899584,"results":"69","hashOfConfig":"42"},{"size":4162,"mtime":1619798517087,"results":"70","hashOfConfig":"42"},{"size":294,"mtime":1615898981785,"results":"71","hashOfConfig":"42"},{"size":868,"mtime":1618848139243,"results":"72","hashOfConfig":"42"},{"size":1873,"mtime":1616162989309,"results":"73","hashOfConfig":"42"},{"size":1617,"mtime":1616408223415,"results":"74","hashOfConfig":"42"},{"size":1752,"mtime":1619797122431,"results":"75","hashOfConfig":"42"},{"size":1766,"mtime":1619869871003,"results":"76","hashOfConfig":"42"},{"size":275,"mtime":1618675572271,"results":"77","hashOfConfig":"42"},{"size":1355,"mtime":1619879733399,"results":"78","hashOfConfig":"42"},{"size":4192,"mtime":1619878477088,"results":"79","hashOfConfig":"42"},{"size":335,"mtime":1619796563807,"results":"80","hashOfConfig":"42"},{"size":3759,"mtime":1620138620320,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16kgyt2",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"89"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"142"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"142"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"142"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"142"},"C:\\IT\\way_of_the_samurai\\my-app\\src\\App.tsx",[],"C:\\IT\\way_of_the_samurai\\my-app\\src\\reportWebVitals.ts",[],["181","182"],"C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Header\\header.tsx",[],["183","184"],"C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Profile\\Profile.tsx",[],["185","186"],"C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",["187","188"],"C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["189"],"import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\ntype PostType = {\r\n    message: string\r\n    likes: number\r\n}\r\n\r\nconst Post: React.FC<PostType> = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <div className={s.avaAndMessage}>\r\n                <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSOfqBBnGW-ntm2BhRJQQJupmw5Gh5drIDnvA&usqp=CAU\"/>\r\n                <div className={s.message}>{props.message}</div>\r\n            </div>\r\n            <div>\r\n                <span style={{fontSize: 'small'}}>like {props.likes}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Dialogs\\Dialogs.tsx",[],["190","191"],"C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Navbar\\Navbar.tsx",[],"C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"C:\\IT\\way_of_the_samurai\\my-app\\src\\index.tsx",[],"C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx",[],"C:\\IT\\way_of_the_samurai\\my-app\\src\\redux\\Profile-reducer.tsx",["192"],"C:\\IT\\way_of_the_samurai\\my-app\\src\\redux\\redux-store.tsx",[],"C:\\IT\\way_of_the_samurai\\my-app\\src\\redux\\Sidebar-reducer.tsx",[],["193","194"],"C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["195"],"import React, {Dispatch} from \"react\";\r\nimport {\r\n    addPostActionCreator,\r\n    ProfileReducerActionType,\r\n} from \"../../../redux/Profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateStoreType} from \"../../../redux/redux-store\";\r\n\r\nlet mapStateToProps = (state: StateStoreType) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch<ProfileReducerActionType>) => {\r\n    return {\r\n        addPost: (newPostText: string) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\n",["196","197"],"C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx",[],"C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Navbar\\NavbarContainer.tsx",["198"],"import React, {Dispatch} from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateStoreType} from \"../../redux/redux-store\";\r\n\r\n// const NavbarContainer: React.FC<NavbarType> = (props) => {\r\n//\r\n//     return <StoreContext.Consumer>\r\n//         {(store) => {\r\n//             let state = store.getState().sidebar\r\n//\r\n//             return <Navbar sidebar={state}/>\r\n//         }}\r\n//     </StoreContext.Consumer>\r\n// }\r\n//\r\n// export default NavbarContainer;\r\n\r\nlet mapStateToProps = (state: StateStoreType) => {\r\n    return {\r\n        sidebar: state.sidebar\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport const NavbarContainer = connect(mapStateToProps, mapDispatchToProps)(Navbar)","C:\\IT\\way_of_the_samurai\\my-app\\src\\StoreContext.tsx",[],"C:\\IT\\way_of_the_samurai\\my-app\\src\\redux\\Dialogs-reducer.tsx",[],["199","200"],"C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Users\\users.tsx",[],["201","202"],"C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Users\\UsersContainer.tsx",["203"],"C:\\IT\\way_of_the_samurai\\my-app\\src\\redux\\Users-reducer.tsx",["204"],"C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Profile\\ProfileContainer.tsx",[],"C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Common\\Preloader\\Preloader.tsx",["205"],"import preloader from \"../../../assets/images/48083.gif\";\r\nimport React from \"react\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\n\r\nexport let Preloader = () => {\r\n    return (\r\n        <div>\r\n            <CircularProgress />\r\n            {/*<img src={preloader}/>*/}\r\n        </div>\r\n    )\r\n}",["206","207"],"C:\\IT\\way_of_the_samurai\\my-app\\src\\redux\\Auth-reducer.tsx",[],"C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Header\\headerContainer.tsx",[],"C:\\IT\\way_of_the_samurai\\my-app\\src\\api\\api.ts",[],["208","209"],"C:\\IT\\way_of_the_samurai\\my-app\\src\\hoc\\withAuthRedirect.tsx",[],"C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Login\\Login.tsx",["210","211"],"import React from 'react'\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/Auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {StateStoreType} from \"../../redux/redux-store\";\r\nimport style2 from './../Common/FormsControls/FormsControls.module.css'\r\nimport pic from \"../../assets/images/socialNetwork.jpg\"\r\nimport style from './Login.module.scss'\r\nimport {Button} from \"../Common/Button/Button\";\r\n\r\ntype TypeCaptcha = {\r\n    captchaUrl: string\r\n}\r\ntype FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\n\r\nexport const LoginForm: React.FC<InjectedFormProps<FormDataType, TypeCaptcha> & TypeCaptcha> = (props) => {\r\n\r\n    return (\r\n        <div className={style.mainDiv}>\r\n            <div className={style.imageBlock}>\r\n                <img className={style.image} src={pic}/>\r\n            </div>\r\n            <div className={style.formBlock}>\r\n                {/*handleSubmit функция из библиотеки form */}\r\n                <form onSubmit={props.handleSubmit} className={style.form}>\r\n                    <p style={{marginTop: '-15px'}}>Email: free@samuraijs.com</p>\r\n                    <p>Password: free</p>\r\n                    {/* Field контейнерная компонента из redux-form */}\r\n                    <Field placeholder={\"Email\"} name={\"email\"}\r\n                           validate={[required]}\r\n                           component={Input}/>\r\n                    <Field placeholder={\"Password\"} name={\"password\"} type={'password'}\r\n                           validate={[required]}\r\n                           component={Input}/>\r\n                    <div className={style.field}><Field type={\"checkbox\"} name={\"rememberMe\"} component={Input}/><span\r\n                        className={style.checkboxText}>remember me</span></div>\r\n                    {props.captchaUrl && <div><img className={style2.captchaImage} src={props.captchaUrl}/></div>}\r\n                    {props.captchaUrl && <Field component={\"input\"}\r\n                                                placeholder={\"anti bot symbols\"}\r\n                                                validate={[required]}\r\n                                                name={\"captcha\"}/>}\r\n                    {props.error && <div className={style2.formSummaryError}>\r\n                        {props.error}\r\n                    </div>}\r\n                    <Button text={\"Login\"}/>\r\n                </form>\r\n                <div>\r\n                    {/*Тестовая учётная запись для логинизации:\r\n                    Email: free@samuraijs.com\r\n                    Password: free*/}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// HOC reduxForm()() вначале настраивает, а потом вызывает hoc\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType, TypeCaptcha>({\r\n    // каждая форма должна иметь уникальное имя\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\ntype LoginPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean, captcha: string) => void\r\n    isAuth: boolean\r\n    captcha: string | null\r\n}\r\nconst Login: React.FC<LoginPropsType> = (props) => {\r\n\r\n    let validCaptcha = \"\"\r\n    if (props.captcha !== null) {\r\n        validCaptcha = props.captcha\r\n    }\r\n\r\n    const onSubmit = (formData: FormDataType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={validCaptcha}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: StateStoreType) => {\r\n    return {\r\n        captcha: state.auth.captchaUrl,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(Login)","C:\\IT\\way_of_the_samurai\\my-app\\src\\utils\\validators\\validators.ts",[],"C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Common\\FormsControls\\FormsControls.tsx",[],"C:\\IT\\way_of_the_samurai\\my-app\\src\\redux\\App-reducer.tsx",[],"C:\\IT\\way_of_the_samurai\\my-app\\src\\redux\\users-selectors.ts",[],"C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Users\\user.tsx",["212"],"import {UserType} from \"../../redux/Users-reducer\";\r\nimport React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto from \"../../assets/images/user.jpg\";\r\nimport style from \"./User.module.scss\";\r\n\r\ntype UserPropsType = {\r\n    user: UserType\r\n    unfollowUser: (userId: number) => void\r\n    followUser: (userId: number) => void\r\n    followingInProgress: Array<number>\r\n}\r\n\r\nexport const User: React.FC<UserPropsType> = (props) => {\r\n    return (\r\n        <div className={style.userBlock}>\r\n\r\n            <div>\r\n                <NavLink to={'profile/' + props.user.id}>\r\n                    <img src={props.user.photos.small != null\r\n                        ? props.user.photos.small\r\n                        : userPhoto} className={style.userPhoto}/>\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {props.user.followed\r\n                    ? <button disabled={props.followingInProgress.some((id: number) => id === props.user.id)}\r\n                              className={style.btn}\r\n                              onClick={() => {\r\n                                  props.unfollowUser(props.user.id)\r\n                              }}>Unfollow</button>\r\n                    : <button disabled={props.followingInProgress.some((id: number) => id === props.user.id)}\r\n                              className={style.btn}\r\n                              onClick={() => {\r\n                                  props.followUser(props.user.id)\r\n                              }}>Follow</button>\r\n                }\r\n            </div>\r\n            <div>\r\n                    <div>{props.user.name}</div>\r\n                    <div>{props.user.status}</div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Common\\Paginator\\Paginator.tsx",[],["213","214"],"C:\\IT\\way_of_the_samurai\\my-app\\src\\hoc\\withSuspense.tsx",[],"C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx",[],"C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["215","216","217","218"],"import React, {ChangeEvent, useState} from \"react\";\r\nimport s from \"./ProfileInfo.module.scss\"\r\nimport {ProfileType} from \"../../../redux/Profile-reducer\";\r\nimport {Preloader} from \"../../Common/Preloader/Preloader\";\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"./../../../assets/images/user.jpg\"\r\nimport {ProfileDataForm} from \"./ProfileDataForm\";\r\n\r\n\r\ntype ProfileInfoType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    isOwner: boolean\r\n    savePhoto: (file: File) => void\r\n}\r\n\r\nconst ProfileInfo: React.FC<ProfileInfoType> = (props) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    if (!props.profile) {\r\n        return <div>loading</div>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <div className={s.photoBlock}>\r\n                    <img src={props.profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                    {props.isOwner && <input type={\"file\"}\r\n                                             className={s.inputFile}\r\n                                             onChange={onMainPhotoSelected}/>}\r\n                </div>\r\n                <ProfileData goToEditMode={() => setEditMode(true)}\r\n                             profile={props.profile}\r\n                             status={props.status}\r\n                             updateStatus={props.updateStatus}\r\n                             isOwner={props.isOwner}/>\r\n                {/*<ProfileStatusWithHooks status={props.status}\r\n                                        updateStatus={props.updateStatus}\r\n                />*/}\r\n                {/*{editMode\r\n                    ? <ProfileDataForm profile={props.profile}/>\r\n                    : <ProfileData goToEditMode={() => setEditMode(true)}\r\n                                   profile={props.profile}\r\n                                   status={props.status}\r\n                                   updateStatus={props.updateStatus}\r\n                                   isOwner={props.isOwner}/>\r\n                }*/}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype ProfileDataPropsType = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n    goToEditMode: any // FIX\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\nexport const ProfileData = (props: ProfileDataPropsType) => {\r\n    return (\r\n        <div className={s.profileData}>\r\n            <div className={s.name}>\r\n                {props.profile.fullName}\r\n            </div>\r\n            <ProfileStatusWithHooks status={props.status}\r\n                                    updateStatus={props.updateStatus}/>\r\n            {/*{props.isOwner && <div>\r\n                <button onClick={props.goToEditMode}>edit</button>\r\n            </div>}\r\n            <div>\r\n                <b>Full name</b>: {props.profile?.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {props.profile?.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            {props.profile?.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills</b>: {props.profile?.lookingForAJobDescription}\r\n            </div>\r\n            }\r\n\r\n            <div>\r\n                <b>About me</b>: {props.profile?.aboutMe}\r\n            </div>\r\n            <div>\r\n\r\n                <b>Contacts</b>: {\r\n                // @ts-ignore\r\n                Object.keys(props.profile?.contacts).map(key => {\r\n                    // @ts-ignore\r\n                    return <Contact key={key} contactTitle={key} contactValue={props.profile?.contacts[key]}/>\r\n                })}\r\n            </div>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\ntype ContactPropsType = {\r\n    contactTitle: string\r\n    contactValue: any\r\n}\r\n\r\nexport const Contact = (props: ContactPropsType) => {\r\n    return <div className={s.contact}><b>{props.contactTitle}</b>: {props.contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Common\\Button\\Button.tsx",[],"C:\\IT\\way_of_the_samurai\\my-app\\src\\components\\Chat\\ChatPage.tsx",["219"],"import React, {useEffect, useRef, useState} from \"react\"\r\nimport s from \"./ChatPage.module.scss\"\r\n\r\nexport type ChatMessageType = {\r\n    message: string\r\n    photo: string\r\n    userId: number\r\n    userName: string\r\n}\r\n\r\nexport const ChatPage: React.FC = () => {\r\n    return (\r\n        <div className={s.chatPageBlock}>\r\n            <Chat/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Chat: React.FC = () => {\r\n    const [wsChannel, setWsChannel] = useState<WebSocket | null>(null)\r\n\r\n    useEffect(() => {\r\n        let ws: WebSocket\r\n        const closeHandler = () => {\r\n            console.log('close ws')\r\n            setTimeout(createChannel, 3000)\r\n        }\r\n\r\n        function createChannel() {\r\n            ws?.removeEventListener('close', closeHandler)\r\n            ws?.close()\r\n            ws = new WebSocket(\"wss://social-network.samuraijs.com/handlers/ChatHandler.ashx\")\r\n            ws.addEventListener(\"close\", closeHandler)\r\n            setWsChannel(ws)\r\n        }\r\n\r\n        createChannel()\r\n\r\n        return () => {\r\n            ws.removeEventListener('close', closeHandler)\r\n            ws.close()\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className={s.chatBlock}>\r\n            <Messages wsChannel={wsChannel}/>\r\n            <AddMessageForm wsChannel={wsChannel}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Messages: React.FC<{ wsChannel: WebSocket | null }> = ({wsChannel}) => {\r\n    const [messages, setMessages] = useState<ChatMessageType[]>([])\r\n\r\n    useEffect(() => {\r\n        let messageHandler = (e: MessageEvent) => {\r\n            let newMessages = JSON.parse(e.data)\r\n            setMessages(prevMessages => [...prevMessages, ...newMessages])\r\n        }\r\n        wsChannel?.addEventListener('message', messageHandler)\r\n\r\n        return () => {\r\n            wsChannel?.removeEventListener('message', messageHandler)\r\n        }\r\n    }, [wsChannel])\r\n\r\n    const divRef = useRef<any>(null);\r\n\r\n    useEffect(() => {\r\n        divRef.current.scrollIntoView({behavior: 'smooth'});\r\n    });\r\n\r\n    return (\r\n        <div className={s.messagesBlock} style={{height: '400px', overflowY: 'auto'}}>\r\n            {messages.map((m, index) => <Message key={index} message={m}/>)}\r\n            <div ref={divRef}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Message: React.FC<{ message: ChatMessageType }> = ({message}) => {\r\n    return (\r\n        <div className={s.messageBlock}>\r\n            <div className={s.avaAndNameBlock}>\r\n                <img style={{height: '30px', width: '30px'}} src={message.photo}/>\r\n                <div className={s.name}>{message.userName}</div>\r\n            </div>\r\n            <div className={s.messageText}>{message.message}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const AddMessageForm: React.FC<{ wsChannel: WebSocket | null }> = ({wsChannel}) => {\r\n    const [message, setMessage] = useState('')\r\n    const [readyStatus, setReadyStatus] = useState<'pending' | 'ready'>('pending')\r\n\r\n    useEffect(() => {\r\n        let openHandler = () => {\r\n            setReadyStatus('ready')\r\n        }\r\n\r\n        wsChannel?.addEventListener(\"open\", openHandler)\r\n\r\n        return () => {\r\n            wsChannel?.removeEventListener('open', openHandler)\r\n        }\r\n\r\n    }, [wsChannel])\r\n\r\n    const sendMessage = () => {\r\n        if (!message) return\r\n        wsChannel?.send(message)\r\n        setMessage('')\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.addMessageFormBlock}>\r\n            <textarea onChange={e => setMessage(e.currentTarget.value)}\r\n                      placeholder={\"your message\"}\r\n                      value={message}/>\r\n            <button disabled={wsChannel === null || readyStatus !== 'ready'}\r\n                    onClick={sendMessage}>Send</button>\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"220","replacedBy":"224"},{"ruleId":"222","replacedBy":"225"},{"ruleId":"220","replacedBy":"226"},{"ruleId":"222","replacedBy":"227"},{"ruleId":"228","severity":1,"message":"229","line":5,"column":9,"nodeType":"230","messageId":"231","endLine":5,"endColumn":25},{"ruleId":"228","severity":1,"message":"232","line":5,"column":27,"nodeType":"230","messageId":"231","endLine":5,"endColumn":35},{"ruleId":"233","severity":1,"message":"234","line":13,"column":17,"nodeType":"235","endLine":13,"endColumn":129},{"ruleId":"220","replacedBy":"236"},{"ruleId":"222","replacedBy":"237"},{"ruleId":"228","severity":1,"message":"238","line":1,"column":8,"nodeType":"230","messageId":"231","endLine":1,"endColumn":13},{"ruleId":"220","replacedBy":"239"},{"ruleId":"222","replacedBy":"240"},{"ruleId":"228","severity":1,"message":"238","line":1,"column":8,"nodeType":"230","messageId":"231","endLine":1,"endColumn":13},{"ruleId":"220","replacedBy":"241"},{"ruleId":"222","replacedBy":"242"},{"ruleId":"228","severity":1,"message":"238","line":1,"column":8,"nodeType":"230","messageId":"231","endLine":1,"endColumn":13},{"ruleId":"220","replacedBy":"243"},{"ruleId":"222","replacedBy":"244"},{"ruleId":"220","replacedBy":"245"},{"ruleId":"222","replacedBy":"246"},{"ruleId":"247","severity":1,"message":"248","line":39,"column":5,"nodeType":"249","messageId":"250","endLine":41,"endColumn":6},{"ruleId":"251","severity":1,"message":"252","line":89,"column":75,"nodeType":"253","messageId":"254","endLine":89,"endColumn":77},{"ruleId":"228","severity":1,"message":"255","line":1,"column":8,"nodeType":"230","messageId":"231","endLine":1,"endColumn":17},{"ruleId":"220","replacedBy":"256"},{"ruleId":"222","replacedBy":"257"},{"ruleId":"220","replacedBy":"258"},{"ruleId":"222","replacedBy":"259"},{"ruleId":"233","severity":1,"message":"234","line":29,"column":17,"nodeType":"235","endLine":29,"endColumn":57},{"ruleId":"233","severity":1,"message":"234","line":45,"column":47,"nodeType":"235","endLine":45,"endColumn":108},{"ruleId":"233","severity":1,"message":"234","line":20,"column":21,"nodeType":"235","endLine":22,"endColumn":67},{"ruleId":"220","replacedBy":"260"},{"ruleId":"222","replacedBy":"261"},{"ruleId":"228","severity":1,"message":"262","line":4,"column":9,"nodeType":"230","messageId":"231","endLine":4,"endColumn":18},{"ruleId":"228","severity":1,"message":"263","line":7,"column":9,"nodeType":"230","messageId":"231","endLine":7,"endColumn":24},{"ruleId":"228","severity":1,"message":"264","line":19,"column":12,"nodeType":"230","messageId":"231","endLine":19,"endColumn":20},{"ruleId":"233","severity":1,"message":"234","line":35,"column":21,"nodeType":"235","endLine":35,"endColumn":97},{"ruleId":"233","severity":1,"message":"234","line":86,"column":17,"nodeType":"235","endLine":86,"endColumn":83},"no-native-reassign",["265"],"no-negated-in-lhs",["266"],["265"],["266"],["265"],["266"],"@typescript-eslint/no-unused-vars","'maxLengthCreator' is defined but never used.","Identifier","unusedVar","'required' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["265"],["266"],"'React' is defined but never used.",["265"],["266"],["265"],["266"],["265"],["266"],["265"],["266"],"@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'preloader' is defined but never used.",["265"],["266"],["265"],["266"],["265"],["266"],"'Preloader' is defined but never used.","'ProfileDataForm' is defined but never used.","'editMode' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]